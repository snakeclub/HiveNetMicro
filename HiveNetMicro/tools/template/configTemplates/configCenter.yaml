# ******************************************
# base_config: 应用配置中心的访问配置
#   env: str, 当前环境配置, 全局参数, 指定需获取配置应用的环境信息, 例如DEV/SIT/UAT/PRD
#   center_type: str, 配置中心类型, 不设置代表从本地文件获取配置, 如果设置了类型, 需要通过类型获取具体的配置项
#     例如: 设置为nacos, 则从nacos配置节点获取该类型的配置中心的具体配置
#   namespace: str, 配置所在的命名空间, 可以实现不同环境或项目的软隔离
#     注: 真实的命名空间会在后面添加环境信息, 例如'HiveNetMicroConfig-${env}'
#   group: str, 配置所在的分组, 默认为sys
#   prefix: str, 配置项的前缀, 可以通过设置不同的前缀来隔离不同服务器的配置, 同时也可以设置相同的前缀来让多个服务器共享一套配置
#   not_existed: str, 配置项不存在时的处理机制, error-直接报错且不进行处理, create-利用本地的配置文件信息创建
#   ignore_env_when_file_not_existed: bool, 当配套环境的配置文件不存在时, 是否从无环境配置的参数文件中获取配置信息, 默认为false
#   default_timeout: float, 默认的超时时间, 单位为秒
# ******************************************
base_config:
  env: ~
  center_type: ~
  namespace: HiveNetMicroConfig
  group: sys
  prefix: server01
  not_existed: create
  ignore_env_when_file_not_existed: true
  default_timeout: 3.0

# ******************************************
# data_file_mapping: 本地配置文件的映射参数
#   Item Key: 配置标识, 建议直接以配置文件名作为标识
#     type: str, 配置的内容格式, 支持text, xml, json, yaml
#     local_file: str, 本地对应的配置文件, config目录的相对路径
# ******************************************
data_file_mapping:
  application.yaml:  # 微服务应用配置
    type: yaml
    local_file: application.yaml

  services.yaml:  # 对外服务配置
    type: yaml
    local_file: services.yaml

  remoteServices.yaml:  # 远程调用支持服务配置
    type: yaml
    local_file: remoteServices.yaml

  adapters.yaml:  # 动态加载的适配器
    type: yaml
    local_file: adapters.yaml

# ******************************************
#  注: 以下是插件加载的通用配置说明
#  plugin: dict, 插件装载信息
#    is_self_plugin: bool, 是否自有插件, 默认为False(直接从安装目录获取默认支持的插件)
#    path: str, 文件路径或加载模块的指定搜索路径(plugins目录下的相对路径)
#    module_name: str, 指定要加载的模块名, 如果path包含完整文件名可以不设置
#    class: str, 插件入口类名
#    function: str, 指定要获取的函数名
#    instantiation: bool, 是否要初始化类(缓存实例), 默认为False
#    stand_alone: bool, 是否生成新的独立实例(不缓存), 默认为False
#    cache_id: str, 缓存的唯一检索id, 可以设置为None
#      注: 可以通过cache_id的不同控制一个类可以有多个实例的情况
#    init_args {list} - 类实例的初始化固定参数, 以*args方式传入
#    init_kwargs {dict} - 类实例的初始化kv参数, 以*kwargs方式传入
# ******************************************

# 可选的配置中心清单
configs:
